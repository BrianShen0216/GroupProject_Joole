
@{
    ViewBag.Title = "CopySignUp";
}

<h2>CopySignUp</h2>

<a class="btn btn-success" data-toggle="modal" data-target=".testmodal"<span class="glyphicon glyphicon-eye-open"></span>>test</a>

<div class="AddSignUp">
    @Html.Label("Sign Up")
</div>

<div class="modal fade testmodal" id="SignUp" role="dialog">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button data-dismiss="modal" class="close"><span>&times;</span></button>
                <div class="modal-title">Register as User</div>
            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()


                <div class="modal-body">
                    <div class="col-md-offset-4">
                        <p><label>Image Preview</label></p>
                        <img src="~/Image/VS.jpg" width="120" height="120" alt="" />
                        <p><label>Your Profile Pic</label></p>
                        <button>Choose File</button><label>No file choseen</label>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-offset-4">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-offset-4">
                            @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-offset-4">
                            @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserConPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-offset-4">
                            @Html.EditorFor(model => model.UserConPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserConPassword, "", new { @class = "text-danger" })
                        </div>

                    </div>

                </div>

                <div class="modal-footer">
                    @*<button class="btn btn-primary">submit</button>*@
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            }

        </div>

    </div>

</div>

@*<script type="text/javascript">
        $(document).ready(function () {
            $(".AddSignUp").click(function (e) {
                $('#SignUp').modal('show');
            });
        });
    </script>*@
